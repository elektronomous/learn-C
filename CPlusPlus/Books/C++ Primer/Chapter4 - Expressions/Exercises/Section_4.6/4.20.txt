Assuming that iter is a vector<string>::iterator, inidicate which, if any, of the following
expressions are legal. Explain the behavior of the legal expressions and 
why those that aren't legal are in error.

        vector<string>::iterator iter;

(a) *iter++;
= legal as long as the iter isn't at the one past last element.
(b) (*iter++);
= legal as long as the iter isn't at the one past last element.
(c) *iter.empty();
= illegal since iterator has no member empty().
(d) iter->empty();
= legal because it synonim with (*iter).empty()
(e) ++*iter;
= legal incrementing the dereferenced value.
    NOTE
    = ++*iter means incrementing the dereferenced value.
    = *++iter means dereferenced the incrementing value.
(f) iter++->empty();
= legal as long as the iter isn't at the one past last element.
