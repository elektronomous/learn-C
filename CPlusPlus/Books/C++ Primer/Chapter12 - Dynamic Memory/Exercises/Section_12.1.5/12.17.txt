Which of the following unique_ptr declarations are illegal or likely to result
in subsequent program error? Explain what the problem is with each one.

    int ix = 1024, *pi = &ix, *pi2 = new int(2048);
    typedef unique_ptr<int> IntP;

    (a) IntP p0(ix);
    => illegal, because ix isn't a pointer. that's an direct object.

    (b) IntP p1(pi);
    => legal, because pi is a pointer and we dont assign the pointer, instead using direct initialization

    (c) IntP p2(pi2);
    => legal, also because pi2 is a pointer and we dont assign the pointer, instead using direct initialization

    (d) IntP p3(&ix);
    => legal, because we use &(ampersand) to get the address of the ix and point to it.

    (e) IntP p4(new int(2048));
    => legal, because we are managing a new memory area

    (f) IntP p5(p2.get());
    => illegal, since the get() method is only exist in shared_ptr